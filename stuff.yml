---
- name: AWS role
  ansible.builtin.import_role:
    name: aws
  vars:
    dns_record_list:
    - name: "{{ private_dns }}.{{ private_domain }}"
      zone: "{{ private_domain }}"
      type: A
      value: "{{ private_ip }}"
      private: true
      ttl: 60
    tags_facts:
      private_dns: "private_dns"
      private_domain: "private_domain"
      root_password: "mysql_root_password"
      disk_snapshot: "disk_snapshot"
      disk_size: "disk_size"
      datadir: "mysql_datadir"
      disk_iops: "disk_iops"

- name: Consul Agent role
  ansible.builtin.import_role:
    name: inqwise.common.consul
  vars:
    consul_bind_addr: "{{ private_ip }}"
    consul_retry_join: '["consul.{{ private_domain }}"]'
    consul_datacenter: "{{ environment_name }}-dc-1"
    consul_server: false
    consul_ui: false
    consul_services:
    - name: "mysql"
      tags:
        - database
        - mysql
      port: 3306
      check:
        id: mysql-check
        name: MySQL TCP on port 3306
        tcp: 127.0.0.1:3306
        interval: 10s
        timeout: 1s

- name: Mysql Role
  ansible.builtin.import_role:
    name: inqwise.stacktrek.mysql
    
- name: Install Alloy
  ansible.builtin.include_role:
    name: alloy
  tags: always
  vars:
    alloy_user_groups:
      - systemd-journal
    config: |
      loki.write "local" {
        endpoint {
          url = "{{ loki_base_url }}/loki/api/v1/push"
        }
      }

      loki.relabel "journal" {
        forward_to = []

        rule {
          source_labels = ["__journal__systemd_unit"]
          regex         = "(mysqld.service|telegraf.service)"
          action        = "keep"
        }
        rule {
          source_labels = ["__journal__systemd_unit"]
          target_label  = "unit"
        }
        rule {
          source_labels = ["__journal__hostname"]
          target_label  = "instance"
        }
      }

      loki.source.journal "read" {
        forward_to = [
          loki.write.local.receiver,
        ]
        relabel_rules = loki.relabel.journal.rules
        labels = {
          "job" = "integrations/node_exporter",
          "app" = "mysql",
        }
      }